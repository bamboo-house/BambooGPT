// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  name             String?
  displayName      String?
  email            String?  @unique
  phoneNumber      String?
  photoURL         String?
  uid              String   @unique
  providerId       String
  userCreatedAt    String
  userCreationTime String
  lastLoginAt      String
  lastSignInTime   String
  lastRefreshAt    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  deletedAt        DateTime?
  threads          Thread[]
}

model Thread {
  id        Int       @id @default(autoincrement())
  userId    Int
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  chats     Chat[]

  user      User     @relation(fields: [userId], references: [id])
}

model Chat {
  id                 Int       @id @default(autoincrement())
  threadId           Int
  model              String
  temperature        Float?
  topP               Float?
  n                  Int?
  stream             Boolean?
  stop               String?
  maxTokens          Int?
  presencePenalty   Float?
  frequencyPenalty  Float?
  logitBias          String?
  user               String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  deletedAt          DateTime?
  messages           Message[]

  thread             Thread   @relation(fields: [threadId], references: [id])
}

enum Role {
  System
  User
  Assistant
  Function
}

model Message {
  id        Int       @id @default(autoincrement())
  chatId    Int
  role      Role
  content   String?
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  chat      Chat     @relation(fields: [chatId], references: [id])
}